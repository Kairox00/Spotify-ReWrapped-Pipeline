service: rewrapped-pipeline

frameworkVersion: "3"

provider:
  name: aws
  region: eu-central-1
  stage: ${opt:stage, 'prod'}
  environment:
    DATASOURCE_URL: ${ssm:/rewrapped/prod/db-url}
    DATASOURCE_USERNAME: ${ssm:/rewrapped/prod/db-username}
    DATASOURCE_PASSWORD: ${ssm:/rewrapped/prod/db-password,true}

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: false
    slim: true
    strip: false

functions:
  handler:
    memorySize: 512
    timeout: 60
    role:
      Fn::GetAtt:
        - lambdaExecutionRole
        - Arn
    runtime: python3.9
    handler: lambda_handler.handler
    events:
      - schedule: cron(0 0 1 * ? *)

resources:
  Resources:
    lambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: rewrapped-pipeline-lambda-execution-role-${sls:stage}
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: rewrapped-pipeline-lambda-execution-policy-${sls:stage}
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Action:
                    - "logs:CreateLogStream"
                    - "logs:TagResource"
                    - "logs:CreateLogGroup"
                    - "logs:PutLogEvents"
                  Resource:
                    - "arn:aws:logs:*:*:log-group:/aws/lambda/*"
                - Effect: Allow
                  Action:
                    - "ssm:GetParameter"
                    - "ssm:GetParameters"
                    - "ssm:GetParametersByPath"
                  Resource:
                    - "arn:aws:ssm:*"
